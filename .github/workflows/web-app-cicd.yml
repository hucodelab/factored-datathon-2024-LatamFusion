name: Web App CI/CD
run-name: Running CI/CD for our web application üöÄ
on:
    push:
        branches:
            - first_implementation_cicd
        paths:
            - "web_solution/**"
        tags:
            - "web_solution-v*"
jobs:
    # Create job for checking out the repository and executing unit tests with pytest
    unit-tests:
        name: Unit Tests
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository code
              uses: actions/checkout@v4
            - name: Set up Python 3.11
              uses: actions/setup-python@v5
              with:
                  python-version: 3.11
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r web_solution/requirements-test.txt
            - name: Run unit tests
              run: |
                  pytest web_solution/tests/
    # Create a job for building and pushing the Docker image
    build-and-push-docker-image:
        name: Build and Push Docker Image
        runs-on: ubuntu-latest
        needs: unit-tests
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
          - name: Log in to Azure Container Registry
            run: |
              echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTRY }} --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          - name: Build Docker image
            run: |
              docker build -t ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }} .
              docker tag ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }} ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.IMAGE_NAME }}:latest
          - name: Push Docker image to ACR
            run: |
              docker push ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
              docker push ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.IMAGE_NAME }}:latest
#   Explore-GitHub-Actions:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
#       - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#       - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#       - run: echo "üí° This is a very chingona feature."
#       - name: Check out repository code
#         uses: actions/checkout@v4
#       - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
#       - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
#       - name: List files in the repository
#         run: |
#           ls ${{ github.workspace }}
#       - run: echo "üçè This job's status is ${{ job.status }}."
